// app/(auth)/login/page.tsx
"use client";

import React, {
  useState,
  useEffect,
  useCallback,
  FormEvent,
  ChangeEvent,
} from "react";
import Head from "next/head";
import Script from "next/script";
import { useRouter } from "next/navigation";
import supabase from "@/lib/supabaseClient";
import { toast, ToastContainer } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import { useIsMobile } from "../hooks/useIsMobile";


type TweenVars = {
  opacity?: number;
  rotation?: string;
  ease?: string;
};

declare global {
  interface Window {
    TweenMax?: {
      to: (target: HTMLElement | null, duration: number, vars: TweenVars) => void;
      fromTo: (
        target: HTMLElement | null,
        duration: number,
        fromVars: TweenVars,
        toVars: TweenVars
      ) => void;
    };
  }
}

// 1) Declare a little interface for our SVGs:
interface SVGProps {
  isDark: boolean;
}

// 2) Email‚Äêfield SVGs now *take* `isDark` as a prop:
const DefaultSVG: React.FC<SVGProps> = ({ isDark }) => (
  <svg
    id="Layer_1_default"
    className="mySVG"
    style={{
      position: "absolute",
      top: 0,
      left: 0,
      width: "100%",
      height: "100%",
      pointerEvents: "none",
    }}
    viewBox="-51.2 -51.2 614.40 614.40"
    xmlns="http://www.w3.org/2000/svg"
    transform="rotate(0)"
  >
    <g id="SVGRepo_bgCarrier" strokeWidth="0"></g>
      <g id="SVGRepo_tracerCarrier" strokeLinecap="round" strokeLinejoin="round"></g>
      <g id="SVGRepo_iconCarrier">
        {/* START: Original DefaultSVG paths */}
        <path
          style={{ fill: isDark ? "#E7ECED" : "#7E8488" }}
          d="M256,209.978c25.427,0,46.022,20.595,46.022,46.022S281.427,302.022,256,302.022 S209.978,281.427,209.978,256S230.573,209.978,256,209.978z"
        ></path>
        <path
          style={{ fill: isDark ? "#7E8488" : "#9EA5AA" }}
          d="M256,152.449c57.183,0,103.551,46.368,103.551,103.551S313.183,359.551,256,359.551 S152.449,313.183,152.449,256S198.817,152.449,256,152.449z M302.022,256c0-25.427-20.595-46.022-46.022-46.022 S209.978,230.573,209.978,256s20.595,46.022,46.022,46.022S302.022,281.427,302.022,256z"
        ></path>
        <path
          style={{ fill: isDark ? "#00B4D7" : "#4eb8dd" }}
          d="M503.371,302.022v-92.045h-45.562c-5.293-23.126-14.382-44.642-26.578-64.086l32.216-32.216 l-65.122-65.122l-32.216,32.216c-19.444-12.196-40.96-21.285-64.086-26.578V8.629h-92.045v45.562 c-23.126,5.293-44.642,14.382-64.086,26.578l-32.216-32.216l-65.122,65.122l32.216,32.216 c-12.196,19.444-21.285,40.96-26.578,64.086H8.629v92.045h45.562c5.293,23.126,14.382,44.642,26.578,64.086l-32.216,32.216 l65.122,65.122l32.216-32.216c19.444,12.196,40.96,21.285,64.086,26.578v45.562h92.045v-45.562 c23.126-5.293,44.642-14.382,64.086-26.578l32.216,32.216l65.122-65.122l-32.216-32.216c12.196-19.444,21.285-40.96,26.578-64.086 H503.371z M256,359.551c-57.183,0-103.551-46.368-103.551-103.551S198.817,152.449,256,152.449S359.551,198.817,359.551,256 S313.183,359.551,256,359.551z"
        ></path>
        <path
          style={{ fill: isDark ? "#9EA5AA" : "#BDC3C7" }}
          d="M190.135,176.098c-10.228,8.442-18.809,18.809-25.186,30.547 c-4.782,8.803-8.327,18.377-10.395,28.488c-1.38,6.74-2.104,13.719-2.104,20.868c0,57.183,46.368,103.551,103.551,103.551v-57.528 c-25.427,0-46.022-20.595-46.022-46.022s20.595-46.022,46.022-46.022v-57.528c-17.869,0-34.683,4.529-49.356,12.5 C200.776,168.137,195.249,171.877,190.135,176.098z"
        ></path>
        <path
          style={{ fill: isDark ? "#00ABD5" : "#00ABD5" }}
          d="M152.449,256c0-7.148,0.724-14.127,2.104-20.868c2.069-10.111,5.614-19.685,10.395-28.488 c6.378-11.738,14.957-22.106,25.186-30.547c5.114-4.221,10.642-7.961,16.509-11.149c14.673-7.971,31.486-12.5,49.356-12.5V8.629 h-46.022v45.562c-23.126,5.293-44.642,14.382-64.086,26.578l-32.216-32.216l-65.122,65.122l32.216,32.216 c-12.196,19.444-21.285,40.96-26.578,64.086H8.629v92.045h45.562c5.293,23.126,14.382,44.642,26.578,64.086l-32.216,32.216 l65.122,65.122l32.216-32.216c19.444,12.196,40.96,21.285,64.086,26.578v45.562H256v-143.82 C198.817,359.551,152.449,313.183,152.449,256z"
        ></path>
        
        <path d="M310.652,512H201.348v-47.427c-18.965-4.983-37.123-12.515-54.14-22.458l-33.533,33.534l-77.325-77.325l33.534-33.534 c-9.943-17.017-17.475-35.174-22.458-54.14H0V201.347h47.427c4.983-18.965,12.515-37.123,22.458-54.14l-33.534-33.532l77.325-77.325 l33.534,33.534c17.017-9.943,35.174-17.475,54.14-22.458V0h109.303v47.427c18.965,4.983,37.123,12.515,54.14,22.458l33.532-33.534 l77.325,77.325l-33.534,33.534c9.943,17.017,17.475,35.174,22.458,54.14H512v109.303h-47.427 c-4.983,18.965-12.515,37.123-22.458,54.14l33.534,33.534l-77.325,77.322l-33.534-33.534c-17.017,9.943-35.174,17.475-54.14,22.458 V512H310.652z M218.607,494.742h74.786V450.93l6.704-1.534c21.74-4.975,42.406-13.547,61.427-25.477l5.825-3.653l30.975,30.975 l52.918-52.918l-30.975-30.975l3.653-5.825c11.93-19.021,20.501-39.687,25.477-61.427l1.534-6.704h43.81v-74.786H450.93 l-1.534-6.704c-4.975-21.74-13.547-42.406-25.477-61.427l-3.653-5.825l30.975-30.973l-52.918-52.918l-30.975,30.975l-5.825-3.653 c-19.021-11.93-39.687-20.501-61.427-25.477l-6.703-1.534V17.258h-74.786V61.07l-6.704,1.534 c-21.74,4.975-42.406,13.547-61.427,25.477l-5.825,3.653l-30.974-30.975l-52.918,52.918l30.975,30.975l-3.653,5.825 c-11.93,19.021-20.501,39.687-25.477,61.427l-1.534,6.703H17.258v74.786H61.07l1.534,6.704c4.975,21.74,13.547,42.406,25.477,61.427 l3.653,5.825l-30.975,30.974l52.918,52.918l30.975-30.975l5.825,3.653c19.021,11.93,39.687,20.501,61.427,25.477l6.704,1.534v43.811 H218.607z"></path>
        <path d="M256,368.18c-61.856,0-112.18-50.323-112.18-112.18S194.144,143.82,256,143.82S368.18,194.144,368.18,256 S317.857,368.18,256,368.18z M256,161.079c-52.34,0-94.921,42.581-94.921,94.921S203.66,350.921,256,350.921 S350.921,308.34,350.921,256S308.34,161.079,256,161.079z"></path>
        <path d="M256,310.652c-30.134,0-54.652-24.517-54.652-54.652s24.517-54.652,54.652-54.652s54.652,24.517,54.652,54.652 S286.134,310.652,256,310.652z M256,218.607c-20.618,0-37.393,16.775-37.393,37.393s16.775,37.393,37.393,37.393 s37.393-16.775,37.393-37.393S276.618,218.607,256,218.607z"></path>
        <g>
          <path
            style={{ fill: isDark ? "#FFFFFF" : "#E7ECED" }}
            d="M103.551,250.247H86.292c0-93.577,76.13-169.708,169.708-169.708v17.258 C171.939,97.798,103.551,166.186,103.551,250.247z"
          ></path>
          <path
            style={{ fill: isDark ? "#FFFFFF" : "#E7ECED" }}
            d="M256,419.955v-17.258c84.061,0,152.449-68.388,152.449-152.449h17.258 C425.708,343.825,349.577,419.955,256,419.955z"
          ></path>
        </g>
        {/* END: Original DefaultSVG paths */}
      </g>
    </svg>
  );

const SecondSVG: React.FC<SVGProps> = ({ isDark }) => (
  <svg
    id="Layer_1_second"
    className="mySVG"
    style={{
      position: "absolute",
      top: 0,
      left: 0,
      width: "100%",
      height: "100%",
      pointerEvents: "none",
    }}
    viewBox="-51.2 -51.2 614.40 614.40"
    xmlns="http://www.w3.org/2000/svg"
    transform="rotate(45)"
  >
    <g id="SVGRepo_bgCarrier" strokeWidth="0"></g>
      <g id="SVGRepo_tracerCarrier" strokeLinecap="round" strokeLinejoin="round"></g>
      <g id="SVGRepo_iconCarrier">
        {/* START: Original DefaultSVG paths */}
        <path
          style={{ fill: isDark ? "#E7ECED" : "#7E8488" }}
          d="M256,209.978c25.427,0,46.022,20.595,46.022,46.022S281.427,302.022,256,302.022 S209.978,281.427,209.978,256S230.573,209.978,256,209.978z"
        ></path>
        <path
          style={{ fill: isDark ? "#7E8488" : "#9EA5AA" }}
          d="M256,152.449c57.183,0,103.551,46.368,103.551,103.551S313.183,359.551,256,359.551 S152.449,313.183,152.449,256S198.817,152.449,256,152.449z M302.022,256c0-25.427-20.595-46.022-46.022-46.022 S209.978,230.573,209.978,256s20.595,46.022,46.022,46.022S302.022,281.427,302.022,256z"
        ></path>
        <path
          style={{ fill: isDark ? "#00B4D7" : "#4eb8dd" }}
          d="M503.371,302.022v-92.045h-45.562c-5.293-23.126-14.382-44.642-26.578-64.086l32.216-32.216 l-65.122-65.122l-32.216,32.216c-19.444-12.196-40.96-21.285-64.086-26.578V8.629h-92.045v45.562 c-23.126,5.293-44.642,14.382-64.086,26.578l-32.216-32.216l-65.122,65.122l32.216,32.216 c-12.196,19.444-21.285,40.96-26.578,64.086H8.629v92.045h45.562c5.293,23.126,14.382,44.642,26.578,64.086l-32.216,32.216 l65.122,65.122l32.216-32.216c19.444,12.196,40.96,21.285,64.086,26.578v45.562h92.045v-45.562 c23.126-5.293,44.642-14.382,64.086-26.578l32.216,32.216l65.122-65.122l-32.216-32.216c12.196-19.444,21.285-40.96,26.578-64.086 H503.371z M256,359.551c-57.183,0-103.551-46.368-103.551-103.551S198.817,152.449,256,152.449S359.551,198.817,359.551,256 S313.183,359.551,256,359.551z"
        ></path>
        <path
          style={{ fill: isDark ? "#9EA5AA" : "#BDC3C7" }}
          d="M190.135,176.098c-10.228,8.442-18.809,18.809-25.186,30.547 c-4.782,8.803-8.327,18.377-10.395,28.488c-1.38,6.74-2.104,13.719-2.104,20.868c0,57.183,46.368,103.551,103.551,103.551v-57.528 c-25.427,0-46.022-20.595-46.022-46.022s20.595-46.022,46.022-46.022v-57.528c-17.869,0-34.683,4.529-49.356,12.5 C200.776,168.137,195.249,171.877,190.135,176.098z"
        ></path>
        <path
          style={{ fill: isDark ? "#00ABD5" : "#00ABD5" }}
          d="M152.449,256c0-7.148,0.724-14.127,2.104-20.868c2.069-10.111,5.614-19.685,10.395-28.488 c6.378-11.738,14.957-22.106,25.186-30.547c5.114-4.221,10.642-7.961,16.509-11.149c14.673-7.971,31.486-12.5,49.356-12.5V8.629 h-46.022v45.562c-23.126,5.293-44.642,14.382-64.086,26.578l-32.216-32.216l-65.122,65.122l32.216,32.216 c-12.196,19.444-21.285,40.96-26.578,64.086H8.629v92.045h45.562c5.293,23.126,14.382,44.642,26.578,64.086l-32.216,32.216 l65.122,65.122l32.216-32.216c19.444,12.196,40.96,21.285,64.086,26.578v45.562H256v-143.82 C198.817,359.551,152.449,313.183,152.449,256z"
        ></path>
        
        <path d="M310.652,512H201.348v-47.427c-18.965-4.983-37.123-12.515-54.14-22.458l-33.533,33.534l-77.325-77.325l33.534-33.534 c-9.943-17.017-17.475-35.174-22.458-54.14H0V201.347h47.427c4.983-18.965,12.515-37.123,22.458-54.14l-33.534-33.532l77.325-77.325 l33.534,33.534c17.017-9.943,35.174-17.475,54.14-22.458V0h109.303v47.427c18.965,4.983,37.123,12.515,54.14,22.458l33.532-33.534 l77.325,77.325l-33.534,33.534c9.943,17.017,17.475,35.174,22.458,54.14H512v109.303h-47.427 c-4.983,18.965-12.515,37.123-22.458,54.14l33.534,33.534l-77.325,77.322l-33.534-33.534c-17.017,9.943-35.174,17.475-54.14,22.458 V512H310.652z M218.607,494.742h74.786V450.93l6.704-1.534c21.74-4.975,42.406-13.547,61.427-25.477l5.825-3.653l30.975,30.975 l52.918-52.918l-30.975-30.975l3.653-5.825c11.93-19.021,20.501-39.687,25.477-61.427l1.534-6.704h43.81v-74.786H450.93 l-1.534-6.704c-4.975-21.74-13.547-42.406-25.477-61.427l-3.653-5.825l30.975-30.973l-52.918-52.918l-30.975,30.975l-5.825-3.653 c-19.021-11.93-39.687-20.501-61.427-25.477l-6.703-1.534V17.258h-74.786V61.07l-6.704,1.534 c-21.74,4.975-42.406,13.547-61.427,25.477l-5.825,3.653l-30.974-30.975l-52.918,52.918l30.975,30.975l-3.653,5.825 c-11.93,19.021-20.501,39.687-25.477,61.427l-1.534,6.703H17.258v74.786H61.07l1.534,6.704c4.975,21.74,13.547,42.406,25.477,61.427 l3.653,5.825l-30.975,30.974l52.918,52.918l30.975-30.975l5.825,3.653c19.021,11.93,39.687,20.501,61.427,25.477l6.704,1.534v43.811 H218.607z"></path>
        <path d="M256,368.18c-61.856,0-112.18-50.323-112.18-112.18S194.144,143.82,256,143.82S368.18,194.144,368.18,256 S317.857,368.18,256,368.18z M256,161.079c-52.34,0-94.921,42.581-94.921,94.921S203.66,350.921,256,350.921 S350.921,308.34,350.921,256S308.34,161.079,256,161.079z"></path>
        <path d="M256,310.652c-30.134,0-54.652-24.517-54.652-54.652s24.517-54.652,54.652-54.652s54.652,24.517,54.652,54.652 S286.134,310.652,256,310.652z M256,218.607c-20.618,0-37.393,16.775-37.393,37.393s16.775,37.393,37.393,37.393 s37.393-16.775,37.393-37.393S276.618,218.607,256,218.607z"></path>
        <g>
          <path
            style={{ fill: isDark ? "#FFFFFF" : "#E7ECED" }}
            d="M103.551,250.247H86.292c0-93.577,76.13-169.708,169.708-169.708v17.258 C171.939,97.798,103.551,166.186,103.551,250.247z"
          ></path>
          <path
            style={{ fill: isDark ? "#FFFFFF" : "#E7ECED" }}
            d="M256,419.955v-17.258c84.061,0,152.449-68.388,152.449-152.449h17.258 C425.708,343.825,349.577,419.955,256,419.955z"
          ></path>
        </g>
        {/* END: Original DefaultSVG paths */}
      </g>
    </svg>
  );

const ThirdSVG: React.FC<SVGProps> = ({ isDark }) => (
  <svg
    id="Layer_1_third"
    className="mySVG"
    style={{
      position: "absolute",
      top: 0,
      left: 0,
      width: "100%",
      height: "100%",
      pointerEvents: "none",
    }}
    viewBox="-51.2 -51.2 614.40 614.40"
    xmlns="http://www.w3.org/2000/svg"
    transform="rotate(90)"
  >
     <g id="SVGRepo_bgCarrier" strokeWidth="0"></g>
      <g id="SVGRepo_tracerCarrier" strokeLinecap="round" strokeLinejoin="round"></g>
      <g id="SVGRepo_iconCarrier">
        {/* START: Original DefaultSVG paths */}
        <path
          style={{ fill: isDark ? "#E7ECED" : "#7E8488" }}
          d="M256,209.978c25.427,0,46.022,20.595,46.022,46.022S281.427,302.022,256,302.022 S209.978,281.427,209.978,256S230.573,209.978,256,209.978z"
        ></path>
        <path
          style={{ fill: isDark ? "#7E8488" : "#9EA5AA" }}
          d="M256,152.449c57.183,0,103.551,46.368,103.551,103.551S313.183,359.551,256,359.551 S152.449,313.183,152.449,256S198.817,152.449,256,152.449z M302.022,256c0-25.427-20.595-46.022-46.022-46.022 S209.978,230.573,209.978,256s20.595,46.022,46.022,46.022S302.022,281.427,302.022,256z"
        ></path>
        <path
          style={{ fill: isDark ? "#00B4D7" : "#4eb8dd" }}
          d="M503.371,302.022v-92.045h-45.562c-5.293-23.126-14.382-44.642-26.578-64.086l32.216-32.216 l-65.122-65.122l-32.216,32.216c-19.444-12.196-40.96-21.285-64.086-26.578V8.629h-92.045v45.562 c-23.126,5.293-44.642,14.382-64.086,26.578l-32.216-32.216l-65.122,65.122l32.216,32.216 c-12.196,19.444-21.285,40.96-26.578,64.086H8.629v92.045h45.562c5.293,23.126,14.382,44.642,26.578,64.086l-32.216,32.216 l65.122,65.122l32.216-32.216c19.444,12.196,40.96,21.285,64.086,26.578v45.562h92.045v-45.562 c23.126-5.293,44.642-14.382,64.086-26.578l32.216,32.216l65.122-65.122l-32.216-32.216c12.196-19.444,21.285-40.96,26.578-64.086 H503.371z M256,359.551c-57.183,0-103.551-46.368-103.551-103.551S198.817,152.449,256,152.449S359.551,198.817,359.551,256 S313.183,359.551,256,359.551z"
        ></path>
        <path
          style={{ fill: isDark ? "#9EA5AA" : "#BDC3C7" }}
          d="M190.135,176.098c-10.228,8.442-18.809,18.809-25.186,30.547 c-4.782,8.803-8.327,18.377-10.395,28.488c-1.38,6.74-2.104,13.719-2.104,20.868c0,57.183,46.368,103.551,103.551,103.551v-57.528 c-25.427,0-46.022-20.595-46.022-46.022s20.595-46.022,46.022-46.022v-57.528c-17.869,0-34.683,4.529-49.356,12.5 C200.776,168.137,195.249,171.877,190.135,176.098z"
        ></path>
        <path
          style={{ fill: isDark ? "#00ABD5" : "#00ABD5" }}
          d="M152.449,256c0-7.148,0.724-14.127,2.104-20.868c2.069-10.111,5.614-19.685,10.395-28.488 c6.378-11.738,14.957-22.106,25.186-30.547c5.114-4.221,10.642-7.961,16.509-11.149c14.673-7.971,31.486-12.5,49.356-12.5V8.629 h-46.022v45.562c-23.126,5.293-44.642,14.382-64.086,26.578l-32.216-32.216l-65.122,65.122l32.216,32.216 c-12.196,19.444-21.285,40.96-26.578,64.086H8.629v92.045h45.562c5.293,23.126,14.382,44.642,26.578,64.086l-32.216,32.216 l65.122,65.122l32.216-32.216c19.444,12.196,40.96,21.285,64.086,26.578v45.562H256v-143.82 C198.817,359.551,152.449,313.183,152.449,256z"
        ></path>
        
        <path d="M310.652,512H201.348v-47.427c-18.965-4.983-37.123-12.515-54.14-22.458l-33.533,33.534l-77.325-77.325l33.534-33.534 c-9.943-17.017-17.475-35.174-22.458-54.14H0V201.347h47.427c4.983-18.965,12.515-37.123,22.458-54.14l-33.534-33.532l77.325-77.325 l33.534,33.534c17.017-9.943,35.174-17.475,54.14-22.458V0h109.303v47.427c18.965,4.983,37.123,12.515,54.14,22.458l33.532-33.534 l77.325,77.325l-33.534,33.534c9.943,17.017,17.475,35.174,22.458,54.14H512v109.303h-47.427 c-4.983,18.965-12.515,37.123-22.458,54.14l33.534,33.534l-77.325,77.322l-33.534-33.534c-17.017,9.943-35.174,17.475-54.14,22.458 V512H310.652z M218.607,494.742h74.786V450.93l6.704-1.534c21.74-4.975,42.406-13.547,61.427-25.477l5.825-3.653l30.975,30.975 l52.918-52.918l-30.975-30.975l3.653-5.825c11.93-19.021,20.501-39.687,25.477-61.427l1.534-6.704h43.81v-74.786H450.93 l-1.534-6.704c-4.975-21.74-13.547-42.406-25.477-61.427l-3.653-5.825l30.975-30.973l-52.918-52.918l-30.975,30.975l-5.825-3.653 c-19.021-11.93-39.687-20.501-61.427-25.477l-6.703-1.534V17.258h-74.786V61.07l-6.704,1.534 c-21.74,4.975-42.406,13.547-61.427,25.477l-5.825,3.653l-30.974-30.975l-52.918,52.918l30.975,30.975l-3.653,5.825 c-11.93,19.021-20.501,39.687-25.477,61.427l-1.534,6.703H17.258v74.786H61.07l1.534,6.704c4.975,21.74,13.547,42.406,25.477,61.427 l3.653,5.825l-30.975,30.974l52.918,52.918l30.975-30.975l5.825,3.653c19.021,11.93,39.687,20.501,61.427,25.477l6.704,1.534v43.811 H218.607z"></path>
        <path d="M256,368.18c-61.856,0-112.18-50.323-112.18-112.18S194.144,143.82,256,143.82S368.18,194.144,368.18,256 S317.857,368.18,256,368.18z M256,161.079c-52.34,0-94.921,42.581-94.921,94.921S203.66,350.921,256,350.921 S350.921,308.34,350.921,256S308.34,161.079,256,161.079z"></path>
        <path d="M256,310.652c-30.134,0-54.652-24.517-54.652-54.652s24.517-54.652,54.652-54.652s54.652,24.517,54.652,54.652 S286.134,310.652,256,310.652z M256,218.607c-20.618,0-37.393,16.775-37.393,37.393s16.775,37.393,37.393,37.393 s37.393-16.775,37.393-37.393S276.618,218.607,256,218.607z"></path>
        <g>
          <path
            style={{ fill: isDark ? "#FFFFFF" : "#E7ECED" }}
            d="M103.551,250.247H86.292c0-93.577,76.13-169.708,169.708-169.708v17.258 C171.939,97.798,103.551,166.186,103.551,250.247z"
          ></path>
          <path
            style={{ fill: isDark ? "#FFFFFF" : "#E7ECED" }}
            d="M256,419.955v-17.258c84.061,0,152.449-68.388,152.449-152.449h17.258 C425.708,343.825,349.577,419.955,256,419.955z"
          ></path>
        </g>
        {/* END: Original DefaultSVG paths */}
      </g>
    </svg>
  );

const ForthSVG: React.FC<SVGProps> = ({ isDark }) => (
  <svg
    id="Layer_1_forth"
    className="mySVG"
    style={{
      position: "absolute",
      top: 0,
      left: 0,
      width: "100%",
      height: "100%",
      pointerEvents: "none",
    }}
    viewBox="-51.2 -51.2 614.40 614.40"
    xmlns="http://www.w3.org/2000/svg"
    transform="rotate(135)"
  >
    <g id="SVGRepo_bgCarrier" strokeWidth="0"></g>
      <g id="SVGRepo_tracerCarrier" strokeLinecap="round" strokeLinejoin="round"></g>
      <g id="SVGRepo_iconCarrier">
        {/* START: Original DefaultSVG paths */}
        <path
          style={{ fill: isDark ? "#E7ECED" : "#7E8488" }}
          d="M256,209.978c25.427,0,46.022,20.595,46.022,46.022S281.427,302.022,256,302.022 S209.978,281.427,209.978,256S230.573,209.978,256,209.978z"
        ></path>
        <path
          style={{ fill: isDark ? "#7E8488" : "#9EA5AA" }}
          d="M256,152.449c57.183,0,103.551,46.368,103.551,103.551S313.183,359.551,256,359.551 S152.449,313.183,152.449,256S198.817,152.449,256,152.449z M302.022,256c0-25.427-20.595-46.022-46.022-46.022 S209.978,230.573,209.978,256s20.595,46.022,46.022,46.022S302.022,281.427,302.022,256z"
        ></path>
        <path
          style={{ fill: isDark ? "#00B4D7" : "#4eb8dd" }}
          d="M503.371,302.022v-92.045h-45.562c-5.293-23.126-14.382-44.642-26.578-64.086l32.216-32.216 l-65.122-65.122l-32.216,32.216c-19.444-12.196-40.96-21.285-64.086-26.578V8.629h-92.045v45.562 c-23.126,5.293-44.642,14.382-64.086,26.578l-32.216-32.216l-65.122,65.122l32.216,32.216 c-12.196,19.444-21.285,40.96-26.578,64.086H8.629v92.045h45.562c5.293,23.126,14.382,44.642,26.578,64.086l-32.216,32.216 l65.122,65.122l32.216-32.216c19.444,12.196,40.96,21.285,64.086,26.578v45.562h92.045v-45.562 c23.126-5.293,44.642-14.382,64.086-26.578l32.216,32.216l65.122-65.122l-32.216-32.216c12.196-19.444,21.285-40.96,26.578-64.086 H503.371z M256,359.551c-57.183,0-103.551-46.368-103.551-103.551S198.817,152.449,256,152.449S359.551,198.817,359.551,256 S313.183,359.551,256,359.551z"
        ></path>
        <path
          style={{ fill: isDark ? "#9EA5AA" : "#BDC3C7" }}
          d="M190.135,176.098c-10.228,8.442-18.809,18.809-25.186,30.547 c-4.782,8.803-8.327,18.377-10.395,28.488c-1.38,6.74-2.104,13.719-2.104,20.868c0,57.183,46.368,103.551,103.551,103.551v-57.528 c-25.427,0-46.022-20.595-46.022-46.022s20.595-46.022,46.022-46.022v-57.528c-17.869,0-34.683,4.529-49.356,12.5 C200.776,168.137,195.249,171.877,190.135,176.098z"
        ></path>
        <path
          style={{ fill: isDark ? "#00ABD5" : "#00ABD5" }}
          d="M152.449,256c0-7.148,0.724-14.127,2.104-20.868c2.069-10.111,5.614-19.685,10.395-28.488 c6.378-11.738,14.957-22.106,25.186-30.547c5.114-4.221,10.642-7.961,16.509-11.149c14.673-7.971,31.486-12.5,49.356-12.5V8.629 h-46.022v45.562c-23.126,5.293-44.642,14.382-64.086,26.578l-32.216-32.216l-65.122,65.122l32.216,32.216 c-12.196,19.444-21.285,40.96-26.578,64.086H8.629v92.045h45.562c5.293,23.126,14.382,44.642,26.578,64.086l-32.216,32.216 l65.122,65.122l32.216-32.216c19.444,12.196,40.96,21.285,64.086,26.578v45.562H256v-143.82 C198.817,359.551,152.449,313.183,152.449,256z"
        ></path>
        
        <path d="M310.652,512H201.348v-47.427c-18.965-4.983-37.123-12.515-54.14-22.458l-33.533,33.534l-77.325-77.325l33.534-33.534 c-9.943-17.017-17.475-35.174-22.458-54.14H0V201.347h47.427c4.983-18.965,12.515-37.123,22.458-54.14l-33.534-33.532l77.325-77.325 l33.534,33.534c17.017-9.943,35.174-17.475,54.14-22.458V0h109.303v47.427c18.965,4.983,37.123,12.515,54.14,22.458l33.532-33.534 l77.325,77.325l-33.534,33.534c9.943,17.017,17.475,35.174,22.458,54.14H512v109.303h-47.427 c-4.983,18.965-12.515,37.123-22.458,54.14l33.534,33.534l-77.325,77.322l-33.534-33.534c-17.017,9.943-35.174,17.475-54.14,22.458 V512H310.652z M218.607,494.742h74.786V450.93l6.704-1.534c21.74-4.975,42.406-13.547,61.427-25.477l5.825-3.653l30.975,30.975 l52.918-52.918l-30.975-30.975l3.653-5.825c11.93-19.021,20.501-39.687,25.477-61.427l1.534-6.704h43.81v-74.786H450.93 l-1.534-6.704c-4.975-21.74-13.547-42.406-25.477-61.427l-3.653-5.825l30.975-30.973l-52.918-52.918l-30.975,30.975l-5.825-3.653 c-19.021-11.93-39.687-20.501-61.427-25.477l-6.703-1.534V17.258h-74.786V61.07l-6.704,1.534 c-21.74,4.975-42.406,13.547-61.427,25.477l-5.825,3.653l-30.974-30.975l-52.918,52.918l30.975,30.975l-3.653,5.825 c-11.93,19.021-20.501,39.687-25.477,61.427l-1.534,6.703H17.258v74.786H61.07l1.534,6.704c4.975,21.74,13.547,42.406,25.477,61.427 l3.653,5.825l-30.975,30.974l52.918,52.918l30.975-30.975l5.825,3.653c19.021,11.93,39.687,20.501,61.427,25.477l6.704,1.534v43.811 H218.607z"></path>
        <path d="M256,368.18c-61.856,0-112.18-50.323-112.18-112.18S194.144,143.82,256,143.82S368.18,194.144,368.18,256 S317.857,368.18,256,368.18z M256,161.079c-52.34,0-94.921,42.581-94.921,94.921S203.66,350.921,256,350.921 S350.921,308.34,350.921,256S308.34,161.079,256,161.079z"></path>
        <path d="M256,310.652c-30.134,0-54.652-24.517-54.652-54.652s24.517-54.652,54.652-54.652s54.652,24.517,54.652,54.652 S286.134,310.652,256,310.652z M256,218.607c-20.618,0-37.393,16.775-37.393,37.393s16.775,37.393,37.393,37.393 s37.393-16.775,37.393-37.393S276.618,218.607,256,218.607z"></path>
        <g>
          <path
            style={{ fill: isDark ? "#FFFFFF" : "#E7ECED" }}
            d="M103.551,250.247H86.292c0-93.577,76.13-169.708,169.708-169.708v17.258 C171.939,97.798,103.551,166.186,103.551,250.247z"
          ></path>
          <path
            style={{ fill: isDark ? "#FFFFFF" : "#E7ECED" }}
            d="M256,419.955v-17.258c84.061,0,152.449-68.388,152.449-152.449h17.258 C425.708,343.825,349.577,419.955,256,419.955z"
          ></path>
        </g>
        {/* END: Original DefaultSVG paths */}
      </g>
    </svg>
  );

// 3) Password SVGs (unchanged)
const FirstPasswordSVG = () => (
  <svg
  className="mySVG"
  style={{ position: "absolute", top: 0, left: 0, width: "100%", pointerEvents: "none" }}
  height="200px"
  width="200px"
  version="1.1"
  id="Layer_5"
  xmlns="http://www.w3.org/2000/svg"
  xmlnsXlink="http://www.w3.org/1999/xlink"
  viewBox="0 0 800 800"
  xmlSpace="preserve"
  fill="#000000"
>
  <defs>
    <style>{`
      .st0, .st1 {
        isolation: isolate;
        opacity: 0;
      }
      .st0, .st2 {
        fill: #fff;
      }
      .st3 {
        fill: #d7edf3;
      }
      .st4 {
        fill: #99414d;
      }
      .st1 {
        fill: #040000;
      }
      .st5 {
        fill: #216f93;
      }
      .st6 {
        fill: #e0e0e0;
      }
      .st7 {
        fill: #4f4b4b;
      }
      .st8 {
        fill: #395051;
      }
      .st9 {
        fill: #fbf2c0;
      }
      .st10 {
        fill: #c2c1c1;
      }
    `}</style>
  </defs>
  <polygon className="st7" points="184.3 800 100.6 800 100.6 731.8 266.2 731.8 184.3 800" />
  <polygon className="st7" points="667.1 800 583.5 800 501.5 731.8 667.1 731.8 667.1 800" />
  <rect className="st5" y="0" width="752.8" height="752.8" />
  <rect className="st3" x="74.5" y="74.5" width="603.7" height="603.7" />
  <path
    className="st8"
    d="M752.8,178.9v108.1h-132.3c-29.7,0-54-24.3-54-54s6.1-28.4,15.9-38.2c9.8-9.8,23.3-15.9,38.2-15.9h132.3Z"
  />
  <path
    className="st8"
    d="M752.8,428.6v108.1h-132.3c-29.7,0-54-24.3-54-54s6.1-28.4,15.9-38.2c9.8-9.8,23.3-15.9,38.2-15.9h132.3Z"
  />
  <circle className="st5" cx="390.6" cy="407.4" r="155.3" />
  <path
    className="st4"
    d="M392.7,289.4c-.5,0-1.1,0-1.6,0-6.5.6-11.6,5.8-11.8,12.6-.2,7.2,5.5,13.3,12.7,13.5h1.5c6.5-.7,11.8-6,11.9-12.7,0-.5,0-1,0-1.6-.6-6.4-6-11.6-12.7-11.8Z"
  />
  <path
    className="st2"
    d="M354.8,307.2c-2.4-5-7.6-7.8-12.9-7.3s-3.2.5-4.6,1.3c-6.4,3.2-9.1,11-6,17.5,2.5,5,7.7,7.7,12.9,7.3s3-.6,4.6-1.3c5-2.4,7.8-7.6,7.3-12.9-.1-1.5-.5-3.1-1.3-4.6Z"
  />
  <path
    className="st2"
    d="M452.4,309.9c-1.1-2.3-2.8-4.1-5.2-5.4-2.5-1.4-5.1-1.9-7.6-1.7-4.2.4-8.1,2.7-10.2,6.6-3.5,6.3-1.4,14.2,4.9,17.8.8.6,1.7.8,2.6,1.1,1.7.5,3.3.7,4.9.6,4.2-.4,8.2-2.7,10.3-6.6,1.4-2.4,1.9-5,1.7-7.6-.2-1.7-.7-3.3-1.4-4.8Z"
  />
  <path
    className="st2"
    d="M312.1,334.7c-2.7-2-5.8-2.8-8.9-2.6s-7.1,2.1-9.3,5.3c-4.3,5.7-3.1,13.9,2.7,18.2,2.7,2,5.8,2.7,8.9,2.4s7.1-2.1,9.3-5.2c2-2.7,2.8-5.8,2.6-8.9s-2.1-7.1-5.3-9.3Z"
  />
  <path
    className="st2"
    d="M488.4,343.3c-2.7-4.2-7.5-6.3-12.2-5.9s-4,.8-5.9,2c-6.1,3.9-7.9,12-3.9,18.1,2.7,4.2,7.5,6.3,12.2,5.9s4-.8,5.9-2c4.2-2.8,6.3-7.5,5.9-12.2-.2-2-.8-4-2-5.9Z"
  />
  <path
    className="st2"
    d="M287,378.7c-1-.2-2-.2-3-.1-5.9.5-11,4.9-11.8,11.1-1.1,7.2,3.8,13.8,10.8,14.9,1.1.1,2.1.2,3.1,0,5.9-.5,10.8-4.9,11.8-11.1.2-1,.2-2.1,0-3.1-.5-5.9-4.9-10.8-11.1-11.8Z"
  />
  <path
    className="st2"
    d="M492.7,385c-7.1.7-12.4,6.9-11.8,13.9v.2c0,.2,0,.4,0,.4.6,7.3,6.9,12.5,14,11.9s12.5-6.9,11.9-14.2h0c0-.2,0-.4,0-.4-.6-7.3-7-12.5-14.2-11.9Z"
  />
  <path
    className="st2"
    d="M301.9,437.6c-2-5.9-7.8-9.4-13.7-8.8s-2,.3-2.9.6c-6.9,2.3-10.4,9.8-8.2,16.6,2,5.8,7.8,9.4,13.5,8.9s2.1-.3,3-.6c5.9-2,9.4-7.8,8.9-13.5s-.3-2.1-.6-3Z"
  />
  <path
    className="st2"
    d="M491.2,436.1c-2.1-.8-4.2-1.1-6.2-.9-4.7.4-8.9,3.3-11,7.9-2.8,6.7.4,14.3,7.1,17.1,2.1.8,4.1,1.1,6.2.9,4.7-.4,9-3.3,10.8-7.9.9-2.1,1.2-4.2,1.1-6.3-.4-4.7-3.4-8.9-8-10.8Z"
  />
  <path
    className="st2"
    d="M325.7,474.6c-2.4-2.3-5.5-3.5-8.5-3.6-.5,0-1.1,0-1.6,0-3.1.3-6.1,1.6-8.3,4.1-2.6,2.8-3.8,6.4-3.5,10s0,1.1.3,1.6c.5,2.4,1.8,4.9,3.8,6.9,2.8,2.7,6.4,3.9,10,3.6s6.1-1.6,8.4-4.1c2.6-2.8,3.8-6.5,3.5-10.1-.3-3.1-1.6-6.1-4.1-8.3Z"
  />
  <path
    className="st2"
    d="M466.2,480.3c-2.8-3.5-7-5.1-11.2-4.7s-5.1,1.2-7.2,3c-5.5,4.6-6.3,12.8-1.6,18.4,2.8,3.5,7,5.1,11.1,4.7s5.1-1.2,7.3-3c3.3-2.8,5-7,4.6-11.1-.2-2.6-1.2-5.1-3-7.3Z"
  />
  <path
    className="st2"
    d="M364.2,496.4c-1.7-.5-3.3-.6-4.7-.5-5.3.5-9.9,4.1-11.4,9.4-1.9,6.9,2.1,14.1,9.1,16.1,1.5.5,3.1.6,4.6.5,5.3-.5,9.9-4.1,11.4-9.4.5-1.5.6-3.1.5-4.7-.5-5.3-4.1-9.9-9.4-11.3Z"
  />
  <path
    className="st2"
    d="M423.7,507.8c-1.3-6.6-7.4-10.9-13.8-10.3s-1.1,0-1.6.3c-7.1,1.5-11.6,8.5-10.2,15.5,1.4,6.4,7.5,10.9,13.9,10.3s1.1-.2,1.6-.3c6.6-1.3,10.9-7.4,10.3-13.9,0-.5,0-1.1-.3-1.6Z"
  />
  <circle className="st6" cx="390.6" cy="407.4" r="63.4" />
  <polygon className="st5" points="369 256.5 391.3 217.8 413.7 256.5 369 256.5" />
  <polygon className="st4" points="413 168.8 390.7 207.4 368.4 168.8 413 168.8" />
  <circle className="st4" cx="390.7" cy="154" r="37.3" />
  <circle
    className="st9"
    cx="390.7"
    cy="153.4"
    r="11.2"
    transform="translate(99.5 455.6) rotate(-67.5)"
  />
  <path
    className="st10"
    d="M170.2,586.3h0c-15.7,0-28.6-12.9-28.6-28.6V224.8c0-15.7,12.9-28.6,28.6-28.6h0c15.7,0,28.6,12.9,28.6,28.6v332.9c0,15.7-12.9,28.6-28.6,28.6Z"
  />
  <path
    className="st4"
    d="M169.6,341.6h0c-22.9,0-41.6-18.7-41.6-41.6v-24.8c0-22.9,18.7-41.6,41.6-41.6h0c22.9,0,41.6,18.7,41.6,41.6v24.8c0,22.9-18.7,41.6-41.6,41.6Z"
  />
  <circle className="st3" cx="635.4" cy="233.8" r="17.7" />
  <circle className="st3" cx="635.4" cy="484.5" r="17.7" />
  <polygon
    className="st1"
    points="23.6 752.8 100.6 752.8 100.6 800 184.3 800 241 752.8 526.7 752.8 583.5 800 667.1 800 667.1 752.8 752.8 752.8 752.8 536.6 752.8 428.6 752.8 286.9 752.8 178.9 752.8 23.6 23.6 752.8"
  />
  <rect className="st0" y="1.1" width="752.8" height="20" />
</svg>
);

const SecondPasswordSVG = () => (
  <svg
  className="mySVG"
  style={{
    position: "absolute",
    top: 0,
    left: 0,
    width: "100%",
    pointerEvents: "none",
  }}
  height="200px"
  width="200px"
  version="1.1"
  id="Layer_6"
  xmlns="http://www.w3.org/2000/svg"
  xmlnsXlink="http://www.w3.org/1999/xlink"
  viewBox="0 0 800 800"
  xmlSpace="preserve"
  fill="#000000"
>
  <defs>
    <style>{`
      .st0, .st1 {
        isolation: isolate;
        opacity: 0;
      }
      .st0, .st2 {
        fill: #fff;
      }
      .st3 {
        fill: #d7edf3;
      }
      .st4 {
        fill: #99414d;
      }
      .st1 {
        fill: #040000;
      }
      .st5 {
        fill: #216f93;
      }
      .st6 {
        fill: #e0e0e0;
      }
      .st7 {
        fill: #4f4b4b;
      }
      .st8 {
        fill: #395051;
      }
      .st9 {
        fill: #fbf2c0;
      }
      .st10 {
        fill: #c2c1c1;
      }
    `}</style>
  </defs>
  <polygon className="st7" points="184.3 800 100.6 800 100.6 731.8 266.2 731.8 184.3 800" />
  <polygon className="st7" points="667.1 800 583.5 800 501.5 731.8 667.1 731.8 667.1 800" />
  <rect className="st5" y="0" width="752.8" height="752.8" />
  <rect className="st3" x="74.5" y="74.5" width="603.7" height="603.7" />
  <path className="st8" d="M752.8,178.9v108.1h-132.3c-29.7,0-54-24.3-54-54s6.1-28.4,15.9-38.2c9.8-9.8,23.3-15.9,38.2-15.9h132.3Z" />
  <path className="st8" d="M752.8,428.6v108.1h-132.3c-29.7,0-54-24.3-54-54s6.1-28.4,15.9-38.2c9.8-9.8,23.3-15.9,38.2-15.9h132.3Z" />
  <circle className="st5" cx="390.6" cy="407.4" r="155.3" />
  <path className="st2" d="M392.7,289.4c-.5,0-1.1,0-1.6,0-6.5.6-11.6,5.8-11.8,12.6-.2,7.2,5.5,13.3,12.7,13.5h1.5c6.5-.7,11.8-6,11.9-12.7,0-.5,0-1,0-1.6-.6-6.4-6-11.6-12.7-11.8Z" />
  <path className="st4" d="M354.8,307.2c-2.4-5-7.6-7.8-12.9-7.3s-3.2.5-4.6,1.3c-6.4,3.2-9.1,11-6,17.5,2.5,5,7.7,7.7,12.9,7.3s3-.6,4.6-1.3c5-2.4,7.8-7.6,7.3-12.9-.1-1.5-.5-3.1-1.3-4.6Z" />
  <path className="st2" d="M452.4,309.9c-1.1-2.3-2.8-4.1-5.2-5.4-2.5-1.4-5.1-1.9-7.6-1.7-4.2.4-8.1,2.7-10.2,6.6-3.5,6.3-1.4,14.2,4.9,17.8.8.6,1.7.8,2.6,1.1,1.7.5,3.3.7,4.9.6,4.2-.4,8.2-2.7,10.3-6.6,1.4-2.4,1.9-5,1.7-7.6-.2-1.7-.7-3.3-1.4-4.8Z" />
  <path className="st2" d="M312.1,334.7c-2.7-2-5.8-2.8-8.9-2.6s-7.1,2.1-9.3,5.3c-4.3,5.7-3.1,13.9,2.7,18.2,2.7,2,5.8,2.7,8.9,2.4s7.1-2.1,9.3-5.2c2-2.7,2.8-5.8,2.6-8.9s-2.1-7.1-5.3-9.3Z" />
  <path className="st2" d="M488.4,343.3c-2.7-4.2-7.5-6.3-12.2-5.9s-4,.8-5.9,2c-6.1,3.9-7.9,12-3.9,18.1,2.7,4.2,7.5,6.3,12.2,5.9s4-.8,5.9-2c4.2-2.8,6.3-7.5,5.9-12.2-.2-2-.8-4-2-5.9Z" />
  <path className="st2" d="M287,378.7c-1-.2-2-.2-3-.1-5.9.5-11,4.9-11.8,11.1-1.1,7.2,3.8,13.8,10.8,14.9,1.1.1,2.1.2,3.1,0,5.9-.5,10.8-4.9,11.8-11.1.2-1,.2-2.1,0-3.1-.5-5.9-4.9-10.8-11.1-11.8Z" />
  <path className="st2" d="M492.7,385c-7.1.7-12.4,6.9-11.8,13.9v.2c0,.2,0,.4,0,.4.6,7.3,6.9,12.5,14,11.9s12.5-6.9,11.9-14.2h0c0-.2,0-.4,0-.4-.6-7.3-7-12.5-14.2-11.9Z" />
  <path className="st2" d="M301.9,437.6c-2-5.9-7.8-9.4-13.7-8.8s-2,.3-2.9.6c-6.9,2.3-10.4,9.8-8.2,16.6,2,5.8,7.8,9.4,13.5,8.9s2.1-.3,3-.6c5.9-2,9.4-7.8,8.9-13.5s-.3-2.1-.6-3Z" />
  <path className="st2" d="M491.2,436.1c-2.1-.8-4.2-1.1-6.2-.9-4.7.4-8.9,3.3-11,7.9-2.8,6.7.4,14.3,7.1,17.1,2.1.8,4.1,1.1,6.2.9,4.7-.4,9-3.3,10.8-7.9.9-2.1,1.2-4.2,1.1-6.3-.4-4.7-3.4-8.9-8-10.8Z" />
  <path className="st2" d="M325.7,474.6c-2.4-2.3-5.5-3.5-8.5-3.6-.5,0-1.1,0-1.6,0-3.1.3-6.1,1.6-8.3,4.1-2.6,2.8-3.8,6.4-3.5,10s0,1.1.3,1.6c.5,2.4,1.8,4.9,3.8,6.9,2.8,2.7,6.4,3.9,10,3.6s6.1-1.6,8.4-4.1c2.6-2.8,3.8-6.5,3.5-10.1-.3-3.1-1.6-6.1-4.1-8.3Z" />
  <path className="st2" d="M466.2,480.3c-2.8-3.5-7-5.1-11.2-4.7s-5.1,1.2-7.2,3c-5.5,4.6-6.3,12.8-1.6,18.4,2.8,3.5,7,5.1,11.1,4.7s5.1-1.2,7.3-3c3.3-2.8,5-7,4.6-11.1-.2-2.6-1.2-5.1-3-7.3Z" />
  <path className="st2" d="M364.2,496.4c-1.7-.5-3.3-.6-4.7-.5-5.3.5-9.9,4.1-11.4,9.4-1.9,6.9,2.1,14.1,9.1,16.1,1.5.5,3.1.6,4.6.5,5.3-.5,9.9-4.1,11.4-9.4.5-1.5.6-3.1.5-4.7-.5-5.3-4.1-9.9-9.4-11.3Z" />
  <path className="st2" d="M423.7,507.8c-1.3-6.6-7.4-10.9-13.8-10.3s-1.1,0-1.6.3c-7.1,1.5-11.6,8.5-10.2,15.5,1.4,6.4,7.5,10.9,13.9,10.3s1.1-.2,1.6-.3c6.6-1.3,10.9-7.4,10.3-13.9,0-.5,0-1.1-.3-1.6Z" />
  <circle className="st6" cx="390.6" cy="407.4" r="63.4" />
  <polygon className="st5" points="369 256.5 391.3 217.8 413.7 256.5 369 256.5" />
  <polygon className="st4" points="413 168.8 390.7 207.4 368.4 168.8 413 168.8" />
  <circle className="st4" cx="390.7" cy="154" r="37.3" />
  <circle className="st9" cx="390.7" cy="153.4" r="11.2" transform="translate(99.5 455.6) rotate(-67.5)" />
  <path className="st10" d="M170.2,586.3h0c-15.7,0-28.6-12.9-28.6-28.6V224.8c0-15.7,12.9-28.6,28.6-28.6h0c15.7,0,28.6,12.9,28.6,28.6v332.9c0,15.7-12.9,28.6-28.6,28.6Z" />
  <path className="st4" d="M169.6,363.6h0c-22.9,0-41.6-18.7-41.6-41.6v-24.8c0-22.9,18.7-41.6,41.6-41.6h0c22.9,0,41.6,18.7,41.6,41.6v24.8c0,22.9-18.7,41.6-41.6,41.6Z" />
  <circle className="st3" cx="635.4" cy="233.8" r="17.7" />
  <circle className="st3" cx="635.4" cy="484.5" r="17.7" />
  <polygon className="st1" points="23.6 752.8 100.6 752.8 100.6 800 184.3 800 241 752.8 526.7 752.8 583.5 800 667.1 800 667.1 752.8 752.8 752.8 752.8 536.6 752.8 428.6 752.8 286.9 752.8 178.9 752.8 23.6 23.6 752.8" />
  <rect className="st0" y="1.1" width="752.8" height="20" />
</svg>
);

const ThirdPasswordSVG = () => (
   <svg
    className="mySVG"
    style={{
      position: "absolute",
      top: 0,
      left: 0,
      width: "100%",
      pointerEvents: "none",
    }}
    height="200px"
    width="200px"
    version="1.1"
    id="Layer_7"
    xmlns="http://www.w3.org/2000/svg"
    xmlnsXlink="http://www.w3.org/1999/xlink"
    viewBox="0 0 800 800"
    xmlSpace="preserve"
    fill="#000000"
  >
    <defs>
      <style
        dangerouslySetInnerHTML={{
          __html: `
            .st0, .st1 {
              isolation: isolate;
              opacity: 0;
            }
            .st0, .st2 {
              fill: #fff;
            }
            .st3 {
              fill: #d7edf3;
            }
            .st4 {
              fill: #99414d;
            }
            .st1 {
              fill: #040000;
            }
            .st5 {
              fill: #216f93;
            }
            .st6 {
              fill: #e0e0e0;
            }
            .st7 {
              fill: #4f4b4b;
            }
            .st8 {
              fill: #395051;
            }
            .st9 {
              fill: #fbf2c0;
            }
            .st10 {
              fill: #c2c1c1;
            }
          `,
        }}
      />
    </defs>
    <polygon className="st7" points="184.3 800 100.6 800 100.6 731.8 266.2 731.8 184.3 800" />
    <polygon className="st7" points="667.1 800 583.5 800 501.5 731.8 667.1 731.8 667.1 800" />
    <rect className="st5" y="0" width="752.8" height="752.8" />
    <rect className="st3" x="74.5" y="74.5" width="603.7" height="603.7" />
    <path
      className="st8"
      d="M752.8,178.9v108.1h-132.3c-29.7,0-54-24.3-54-54s6.1-28.4,15.9-38.2c9.8-9.8,23.3-15.9,38.2-15.9h132.3Z"
    />
    <path
      className="st8"
      d="M752.8,428.6v108.1h-132.3c-29.7,0-54-24.3-54-54s6.1-28.4,15.9-38.2c9.8-9.8,23.3-15.9,38.2-15.9h132.3Z"
    />
    <circle className="st5" cx="390.6" cy="407.4" r="155.3" />
    <path
      className="st2"
      d="M392.7,289.4c-.5,0-1.1,0-1.6,0-6.5.6-11.6,5.8-11.8,12.6-.2,7.2,5.5,13.3,12.7,13.5h1.5c6.5-.7,11.8-6,11.9-12.7,0-.5,0-1,0-1.6-.6-6.4-6-11.6-12.7-11.8Z"
    />
    <path
      className="st2"
      d="M354.8,307.2c-2.4-5-7.6-7.8-12.9-7.3s-3.2.5-4.6,1.3c-6.4,3.2-9.1,11-6,17.5,2.5,5,7.7,7.7,12.9,7.3s3-.6,4.6-1.3c5-2.4,7.8-7.6,7.3-12.9-.1-1.5-.5-3.1-1.3-4.6Z"
    />
    <path
      className="st2"
      d="M452.4,309.9c-1.1-2.3-2.8-4.1-5.2-5.4-2.5-1.4-5.1-1.9-7.6-1.7-4.2.4-8.1,2.7-10.2,6.6-3.5,6.3-1.4,14.2,4.9,17.8.8.6,1.7.8,2.6,1.1,1.7.5,3.3.7,4.9.6,4.2-.4,8.2-2.7,10.3-6.6,1.4-2.4,1.9-5,1.7-7.6-.2-1.7-.7-3.3-1.4-4.8Z"
    />
    <path
      className="st4"
      d="M312.1,334.7c-2.7-2-5.8-2.8-8.9-2.6s-7.1,2.1-9.3,5.3c-4.3,5.7-3.1,13.9,2.7,18.2,2.7,2,5.8,2.7,8.9,2.4s7.1-2.1,9.3-5.2c2-2.7,2.8-5.8,2.6-8.9s-2.1-7.1-5.3-9.3Z"
    />
    <path
      className="st2"
      d="M488.4,343.3c-2.7-4.2-7.5-6.3-12.2-5.9s-4,.8-5.9,2c-6.1,3.9-7.9,12-3.9,18.1,2.7,4.2,7.5,6.3,12.2,5.9s4-.8,5.9-2c4.2-2.8,6.3-7.5,5.9-12.2-.2-2-.8-4-2-5.9Z"
    />
    <path
      className="st2"
      d="M287,378.7c-1-.2-2-.2-3-.1-5.9.5-11,4.9-11.8,11.1-1.1,7.2,3.8,13.8,10.8,14.9,1.1.1,2.1.2,3.1,0,5.9-.5,10.8-4.9,11.8-11.1.2-1,.2-2.1,0-3.1-.5-5.9-4.9-10.8-11.1-11.8Z"
    />
    <path
      className="st2"
      d="M492.7,385c-7.1.7-12.4,6.9-11.8,13.9v.2c0,.2,0,.4,0,.4.6,7.3,6.9,12.5,14,11.9s12.5-6.9,11.9-14.2h0c0-.2,0-.4,0-.4-.6-7.3-7-12.5-14.2-11.9Z"
    />
    <path
      className="st2"
      d="M301.9,437.6c-2-5.9-7.8-9.4-13.7-8.8s-2,.3-2.9.6c-6.9,2.3-10.4,9.8-8.2,16.6,2,5.8,7.8,9.4,13.5,8.9s2.1-.3,3-.6c5.9-2,9.4-7.8,8.9-13.5s-.3-2.1-.6-3Z"
    />
    <path
      className="st2"
      d="M491.2,436.1c-2.1-.8-4.2-1.1-6.2-.9-4.7.4-8.9,3.3-11,7.9-2.8,6.7.4,14.3,7.1,17.1,2.1.8,4.1,1.1,6.2.9,4.7-.4,9-3.3,10.8-7.9.9-2.1,1.2-4.2,1.1-6.3-.4-4.7-3.4-8.9-8-10.8Z"
    />
    <path
      className="st2"
      d="M325.7,474.6c-2.4-2.3-5.5-3.5-8.5-3.6-.5,0-1.1,0-1.6,0-3.1.3-6.1,1.6-8.3,4.1-2.6,2.8-3.8,6.4-3.5,10s0,1.1.3,1.6c.5,2.4,1.8,4.9,3.8,6.9,2.8,2.7,6.4,3.9,10,3.6s6.1-1.6,8.4-4.1c2.6-2.8,3.8-6.5,3.5-10.1-.3-3.1-1.6-6.1-4.1-8.3Z"
    />
    <path
      className="st2"
      d="M466.2,480.3c-2.8-3.5-7-5.1-11.2-4.7s-5.1,1.2-7.2,3c-5.5,4.6-6.3,12.8-1.6,18.4,2.8,3.5,7,5.1,11.1,4.7s5.1-1.2,7.3-3c3.3-2.8,5-7,4.6-11.1-.2-2.6-1.2-5.1-3-7.3Z"
    />
    <path
      className="st2"
      d="M364.2,496.4c-1.7-.5-3.3-.6-4.7-.5-5.3.5-9.9,4.1-11.4,9.4-1.9,6.9,2.1,14.1,9.1,16.1,1.5.5,3.1.6,4.6.5,5.3-.5,9.9-4.1,11.4-9.4.5-1.5.6-3.1.5-4.7-.5-5.3-4.1-9.9-9.4-11.3Z"
    />
    <path
      className="st2"
      d="M423.7,507.8c-1.3-6.6-7.4-10.9-13.8-10.3s-1.1,0-1.6.3c-7.1,1.5-11.6,8.5-10.2,15.5,1.4,6.4,7.5,10.9,13.9,10.3s1.1-.2,1.6-.3c6.6-1.3,10.9-7.4,10.3-13.9,0-.5,0-1.1-.3-1.6Z"
    />
    <circle className="st6" cx="390.6" cy="407.4" r="63.4" />
    <polygon className="st5" points="369 256.5 391.3 217.8 413.7 256.5 369 256.5" />
    <polygon className="st4" points="413 168.8 390.7 207.4 368.4 168.8 413 168.8" />
    <circle className="st4" cx="390.7" cy="154" r="37.3" />
    <circle
      className="st9"
      cx="390.7"
      cy="153.4"
      r="11.2"
      transform="translate(99.5 455.6) rotate(-67.5)"
    />
    <path
      className="st10"
      d="M170.2,586.3h0c-15.7,0-28.6-12.9-28.6-28.6V224.8c0-15.7,12.9-28.6,28.6-28.6h0c15.7,0,28.6,12.9,28.6,28.6v332.9c0,15.7-12.9,28.6-28.6,28.6Z"
    />
    <path
      className="st4"
      d="M169.6,387.6h0c-22.9,0-41.6-18.7-41.6-41.6v-24.8c0-22.9,18.7-41.6,41.6-41.6h0c22.9,0,41.6,18.7,41.6,41.6v24.8c0,22.9-18.7,41.6-41.6,41.6Z"
    />
    <circle className="st3" cx="635.4" cy="233.8" r="17.7" />
    <circle className="st3" cx="635.4" cy="484.5" r="17.7" />
    <polygon
      className="st1"
      points="23.6 752.8 100.6 752.8 100.6 800 184.3 800 241 752.8 526.7 752.8 583.5 800 667.1 800 667.1 752.8 752.8 752.8 752.8 536.6 752.8 428.6 752.8 286.9 752.8 178.9 752.8 23.6 23.6 752.8"
    />
    <rect className="st0" y="1.1" width="752.8" height="20" />
  </svg>
);

export default function LoginPage() {
  const router = useRouter();
  const isMobile = useIsMobile();

  // === new form‚Äêmode state ===
  const [isSignUp, setIsSignUp] = useState(false);
  const [confirmPassword, setConfirmPassword] = useState("");

  // === existing login state ===
  const [isDark, setIsDark] = useState<boolean>(false);
  const [email, setEmail] = useState<string>("");
  const [password, setPassword] = useState<string>("");
  const [svgStage, setSvgStage] = useState<number>(0);
  const [passwordSvgStage, setPasswordSvgStage] = useState<number>(0);
  const [activeField, setActiveField] =
    useState<"email" | "password">("email");

  // keep isDark in sync with <html class="dark">
  useEffect(() => {
    const update = () =>
      setIsDark(document.documentElement.classList.contains("dark"));
    update();
    const obs = new MutationObserver(() => update());
    obs.observe(document.documentElement, { attributes: true });
    return () => obs.disconnect();
  }, []);

  // GSAP effects for email SVGs
  useEffect(() => {
    if (typeof window !== "undefined" && window.TweenMax) {
      const ids = [
        "Layer_1_default",
        "Layer_1_second",
        "Layer_1_third",
        "Layer_1_forth",
      ];
      const prevId = ids[(svgStage + ids.length - 1) % ids.length];
      const currId = ids[svgStage];
      const prevEl = document.getElementById(prevId);
      const currEl = document.getElementById(currId);
      window.TweenMax.to(prevEl, 0.5, {
        opacity: 0,
        rotation: "+=45",
        ease: "Power1.easeOut",
      });
      window.TweenMax.fromTo(
        currEl,
        0.5,
        { opacity: 0 },
        { opacity: 1, rotation: "0", ease: "Power1.easeOut" }
      );
    }
  }, [svgStage]);

  // GSAP effects for password SVGs
  useEffect(() => {
    if (typeof window !== "undefined" && window.TweenMax) {
      const ids = ["Layer_5", "Layer_6", "Layer_7"];
      const prevId = ids[(passwordSvgStage + ids.length - 1) % ids.length];
      const currId = ids[passwordSvgStage];
      const prevEl = document.getElementById(prevId);
      const currEl = document.getElementById(currId);
      window.TweenMax.to(prevEl, 0.3, {
        opacity: 0,
        ease: "Power1.easeOut",
      });
      window.TweenMax.fromTo(
        currEl,
        0.3,
        { opacity: 0 },
        { opacity: 1, ease: "Power1.easeOut" }
      );
    }
  }, [passwordSvgStage]);

  const handleEmailChange = useCallback(
    (e: ChangeEvent<HTMLInputElement>) => {
      setEmail(e.target.value);
      if (activeField === "email") {
        setSvgStage((prev) => (prev + 1) % 4);
      }
    },
    [activeField]
  );

  const handlePasswordChange = useCallback(
    (e: ChangeEvent<HTMLInputElement>) => {
      setPassword(e.target.value);
      if (activeField === "password") {
        setPasswordSvgStage((prev) => (prev + 1) % 3);
      }
    },
    [activeField]
  );

  // === new toggle ===
  const toggleFormMode = useCallback(() => {
    setIsSignUp((prev) => !prev);
    setConfirmPassword("");
    setEmail("");
    setPassword("");
    toast.dismiss();
  }, []);

  // === login handler ===
  const handleLogin = useCallback(
    async (e: FormEvent<HTMLFormElement>) => {
      e.preventDefault();
      toast.dismiss();
      const { error } = await supabase.auth.signInWithPassword({
        email,
        password,
      });
      if (error) {
        toast.error(error.message);
      } else {
        toast.success("Logged in successfully!");
        router.push("/");
      }
    },
    [email, password, router]
  );

  // === sign-up handler ===
  const handleSignUp = useCallback(
    async (e: FormEvent<HTMLFormElement>) => {
      e.preventDefault();
      toast.dismiss();
      if (password !== confirmPassword) {
        toast.error("Passwords do not match.");
        return;
      }
      const { data, error } = await supabase.auth.signUp({ email, password });
      if (error) {
        toast.error(error.message);
      } else {
        if (!data.session && data.user && !data.user.email_confirmed_at) {
          toast.success(
            "Sign up successful! Check your email to confirm your registration."
          );
        } else {
          toast.success("Sign up & login successful!");
          router.push("/");
        }
      }
    },
    [email, password, confirmPassword, router]
  );

  // prepare your SVG variants
  const emailSvgVariants = [
    <DefaultSVG key="default" isDark={isDark} />,
    <SecondSVG key="second" isDark={isDark} />,
    <ThirdSVG key="third" isDark={isDark} />,
    <ForthSVG key="forth" isDark={isDark} />,
  ];
  const passwordSvgVariants = [
    <FirstPasswordSVG key="first" />,
    <SecondPasswordSVG key="second" />,
    <ThirdPasswordSVG key="third" />,
  ];

  return (
    <>
      <Head>
        <title>Completics ‚Äî Multi-User Project Management App</title>
        <meta
          name="description"
          content="Completics is a modern, multi-user Kanban board with calendar view, project & version tracking and shareable boards. Productivity app built with Next.js and Supabase."
        />
        <meta
          name="keywords"
          content="Completics, Kanban, Trello alternative, project management, calendar view, Next.js, Supabase, drag and drop, agile board, share boards, productivity app, open source, multi-user, project tracking, version tracking"
        />
        <meta name="author" content="Maxim Bespalov" />

        <meta property="og:type" content="website" />
        <meta
          property="og:title"
          content="Completics ‚Äî Kanban boards that work the way you do"
        />
        <meta
          property="og:description"
          content="Plan visually, track deadlines in a calendar, organise Projects & Versions and collaborate with share links."
        />
        <meta property="og:url" content="https://www.completics.co" />
        <meta name="twitter:card" content="summary_large_image" />
        <meta
          name="twitter:title"
          content="Completics ‚Äî Multi-User Kanban & Calendar"
        />
        <meta
          name="twitter:description"
          content="Completics combines drag-and-drop Kanban, calendar deadlines and shareable boards ‚Äî free for teams and individuals."
        />
      </Head>

      <Script
        src="https://cdnjs.cloudflare.com/ajax/libs/gsap/1.20.4/TweenMax.min.js"
        strategy="beforeInteractive"
      />

      <div
        className="login-page-container"
        // style={{ padding: isMobile ? "1rem" : "2rem" }} // Padding will be handled by CSS
      >
        {/* ‚Äî‚Äî‚Äî description ‚Äî‚Äî‚Äî */}
        <div
          className="login-description"
          style={{
            // maxWidth: "min(90%, 48rem)", // Will be handled by CSS
            // margin: isMobile ? "0 auto 2rem" : "0 auto 3.5rem", // Will be handled by CSS
            textAlign: "center",
            color: isDark ? "#DEE4EA" : "#0F1A2F",
            lineHeight: 1.45,
          }}
        >
          <h1
            style={{
              margin: 0,
              marginBottom: isMobile ? "0.75rem" : "1rem",
              fontSize: isMobile ? "1.55rem" : "2rem",
              fontWeight: 700,
              position: "relative",
              display: "inline-block",
            }}
          >
            Why&nbsp;Completics?
            <span
              style={{
                content: "''",
                position: "absolute",
                left: 0,
                bottom: -4,
                width: "100%",
                height: 4,
                borderRadius: 2,
                background:
                  "linear-gradient(90deg, #4eb8dd 0%, #217093 100%)",
              }}
            />
          </h1>
          <p
            style={{
              margin: 0,
              fontSize: isMobile ? "1rem" : "1.125rem",
              fontWeight: 500,
            }}
          >
            Completics helps you turn ideas into finished work with a&nbsp;fluid&nbsp;
            Kanban board, a&nbsp;calendar for due-dates and <em>Projects</em> & <em>Versions</em> tracking. Share boards read-only
            or let teammates edit‚Äîall in your browser.
          </p>
          <p
            style={{
              marginTop: isMobile ? "0.9rem" : "1rem",
              fontSize: isMobile ? "0.95rem" : "1.05rem",
              fontWeight: 400,
              opacity: 0.85,
            }}
          >
            Built with&nbsp;Next.js&nbsp;+&nbsp;Supabase,&nbsp;open-source on&nbsp;
            <a
              href="https://github.com/Antibody/Completics"
              target="_blank"
              rel="noopener noreferrer"
              style={{
                color: isDark ? "#4eb8dd" : "#217093",
                textDecoration: "underline",
                fontWeight: 600,
              }}
            >
              GitHub
            </a>
            .
          </p>
        </div>

        {/* ‚Äî‚Äî‚Äî login/signup card ‚Äî‚Äî‚Äî */}
        <div
          className="login-form-wrapper" // New wrapper for form and its heading
          // style={{ maxWidth: 420, margin: "0 auto" }} // Will be handled by CSS
        >
          <div className="login-form-container"> {/* Existing container for styling */}
            <h2 style={{ textAlign: "center", marginBottom: "1.25rem" }}>
              {isSignUp ? "Sign Up for Completics" : "Log in to Completics"}
            </h2>

            <form onSubmit={isSignUp ? handleSignUp : handleLogin}>
              <div
                className="login-svg-container" // Added class for SVG container
                style={{
                  position: "relative",                    // keep relative positioning
                  margin: "0 auto 1.5rem",  
                }}
              >
                {activeField === "email"
                  ? emailSvgVariants[svgStage]
                  : passwordSvgVariants[passwordSvgStage]}
              </div>

              {/* Email */}
              <div style={{ marginBottom: "1.25rem" }}>
                <input
                  type="email"
                  placeholder="Email"
                  value={email}
                  onChange={handleEmailChange}
                  onFocus={() => setActiveField("email")}
                  required
                  style={{
                    width: "100%",
                    height: 48,
                    padding: "0 1rem",
                    fontSize: "1rem",
                    fontWeight: 600,
                    border: isDark
                      ? "2px solid rgba(0,0,0,0.35)"
                      : "1px solid rgba(0,0,0,0.15)",
                    borderRadius: 4,
                    background: isDark
                      ? "rgba(0,0,0,0.3)"
                      : "rgba(255,255,255,0.8)",
                    color: isDark ? "#fff" : "#333",
                    boxSizing: "border-box",
                  }}
                />
              </div>

              {/* Password */}
              <div style={{ marginBottom: "1.25rem" }}>
                <input
                  type="password"
                  placeholder="Password"
                  value={password}
                  onChange={handlePasswordChange}
                  onFocus={() => {
                    setActiveField("password");
                    setPasswordSvgStage(0);
                  }}
                  required
                  style={{
                    width: "100%",
                    height: 48,
                    padding: "0 1rem",
                    fontSize: "1rem",
                    fontWeight: 600,
                    border: isDark
                      ? "2px solid rgba(0,0,0,0.35)"
                      : "1px solid rgba(0,0,0,0.15)",
                    borderRadius: 4,
                    background: isDark
                      ? "rgba(0,0,0,0.3)"
                      : "rgba(255,255,255,0.8)",
                    color: isDark ? "#fff" : "#333",
                    boxSizing: "border-box",
                  }}
                />
              </div>

              {/* Confirm Password (only on Sign-Up) */}
              {isSignUp && (
                <div style={{ marginBottom: "1.5rem" }}>
                  <input
                    type="password"
                    placeholder="Confirm Password"
                    value={confirmPassword}
                    onChange={(e) => setConfirmPassword(e.target.value)}
                    required
                    style={{
                      width: "100%",
                      height: 48,
                      padding: "0 1rem",
                      fontSize: "1rem",
                      fontWeight: 600,
                      border: isDark
                        ? "2px solid rgba(0,0,0,0.35)"
                        : "1px solid rgba(0,0,0,0.15)",
                      borderRadius: 4,
                      background: isDark
                        ? "rgba(0,0,0,0.3)"
                        : "rgba(255,255,255,0.8)",
                      color: isDark ? "#fff" : "#333",
                      boxSizing: "border-box",
                    }}
                  />
                </div>
              )}

              {/* Submit */}
              <button
                type="submit"
                style={{
                  width: "100%",
                  height: 48,
                  fontSize: "1rem",
                  fontWeight: 700,
                  border: "none",
                  borderRadius: 4,
                  cursor: "pointer",
                  backgroundColor: isDark ? "#217093" : "#4eb8dd",
                  color: "#fff",
                }}
              >
                {isSignUp ? "Sign Up" : "Log In"}
              </button>
            </form>

            {/* Toggle Login ‚Üî Sign-Up */}
            <button
              type="button"
              onClick={toggleFormMode}
              style={{
                width: "100%",
                marginTop: "1rem",
                padding: "0.75rem",
                background: "transparent",
                border: "none",
                color: isDark ? "#aad4f0" : "#217093",
                textDecoration: "underline",
                cursor: "pointer",
                fontSize: "0.9rem",
              }}
            >
              {isSignUp
                ? "Already have an account? Log In"
                : "Don't have an account? Sign Up"}
            </button>
          </div> {/* End of login-form-container */}
        </div> {/* End of login-form-wrapper */}

        {/* GitHub badge (hides on mobile, now part of the flex/grid flow) */}
        {!isMobile && (
          <div
            className="login-github-badge"
          >
            <a
              href="https://github.com/Antibody/Completics"
              target="_blank"
              rel="noopener noreferrer"
              style={{
                color: isDark ? "#ddd" : "#333",
                textDecoration: "none",
                display: "flex",
                flexDirection: "column",
                alignItems: "center",
              }}
            >
              <svg
                role="img"
                viewBox="0 0 24 24"
                width="32"
                height="32"
                fill="currentColor"
                xmlns="http://www.w3.org/2000/svg"
              >
                <title>GitHub</title>
                <path d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.387.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61-.546-1.387-1.333-1.757-1.333-1.757-1.09-.744.083-.729.083-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.418-1.305.762-1.605-2.665-.3-5.466-1.334-5.466-5.93 0-1.31.47-2.38 1.236-3.22-.123-.303-.536-1.523.117-3.176 0 0 1.008-.322 3.301 1.23a11.5 11.5 0 013.003-.404c1.02.005 2.045.137 3.003.404 2.291-1.552 3.297-1.23 3.297-1.23.655 1.653.242 2.873.12 3.176.77.84 1.235 1.91 1.235 3.22 0 4.61-2.803 5.625-5.475 5.921.43.37.823 1.102.823 2.222 0 1.606-.015 2.896-.015 3.293 0 .32.216.694.825.576C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"/>
              </svg>
              <span style={{ fontSize: "0.9rem", marginTop: 4 }}>
                Completics @ GitHub
              </span>
            </a>
          </div>
        )}
      </div> {/* End of login-page-container */}

      <ToastContainer position="top-right" autoClose={5000} hideProgressBar />
    </>
  );
}
